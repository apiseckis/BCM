@page "/"

<PageTitle>Home</PageTitle>

<div>

    @{
        var variant = IsToggled ? Variant.Filled : Variant.Outlined;
    }

    <MudIconButton Icon="@Icons.Material.Filled.Favorite" Class="full-round-button" Size="Size.Large" Color="Color.Secondary" Variant="variant" OnClick="Toggle" />

@*     @if (IsToggled)
    {
        <MudFab Color="Color.Secondary" Size="Size.Large" IconSize="Size.Large" StartIcon="@Icons.Material.Filled.Favorite" />

    }
    else
    {
        <MudFab Size="Size.Large" IconSize="Size.Large" StartIcon="@Icons.Material.Outlined.Favorite" />

    } *@

</div>


@code {

    public List<DateTime> Dates { get; set; } = [];

    public bool IsToggled { get; set; }

    public async Task Toggle()
    {
        var date = DateTime.Today.ToShortDateString();
        var initialState = await localStorage.GetItemAsync<string>(date);

        if (initialState == "True")
        {
            await localStorage.SetItemAsync(date, "False");

        }
        else
        {
            await localStorage.SetItemAsync(date, "True");

        }

        var updatedState = await localStorage.GetItemAsync<string>(date);

        IsToggled = updatedState == "True";

    }

    protected override async Task OnInitializedAsync()
    {
        var date = DateTime.Today.ToShortDateString();
        var state = await localStorage.GetItemAsync<string>(date);
        IsToggled = state == "True";
    }
}